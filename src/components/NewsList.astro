---

---

<div id="news-list" class="content-blocks-container">
  <p>Загрузка новостей...</p>
</div>

<script is:inline>
  function truncateHTML(html, maxLength) {
    // Удаляем двойные и более <br>, пробелы по краям
    html = html
      .replace(/(<br\s*\/?>\s*){2,}/gi, '<br>')
      .replace(/^\s+|\s+$/g, '');

    const div = document.createElement('div');
    div.innerHTML = html;

    let totalLength = 0;
    let plainText = '';
    const nodes = [];

    // Собираем дерево
    function traverse(node) {
      for (const child of node.childNodes) {
        if (child.nodeType === Node.TEXT_NODE) {
          nodes.push({ type: 'text', content: child.textContent });
          plainText += child.textContent;
        } else if (child.nodeType === Node.ELEMENT_NODE) {
          nodes.push({ type: 'open', tag: child });
          traverse(child);
          nodes.push({ type: 'close', tag: child });
        }
      }
    }

    traverse(div);

    if (plainText.length <= maxLength) {
      return cleanTrailingBreaks(html);
    }

    // Граница обрезки
    const range = 50;
    const slicePoint = maxLength;
    let boundary =
      plainText.slice(0, slicePoint + range).lastIndexOf('.') + 1 ||
      plainText.slice(0, slicePoint + range).lastIndexOf('!') + 1 ||
      plainText.slice(0, slicePoint + range).lastIndexOf('?') + 1;

    if (!boundary || boundary < maxLength * 0.5) {
      const wordBoundary = plainText.slice(0, slicePoint).lastIndexOf(' ');
      boundary = wordBoundary > 0 ? wordBoundary : maxLength;
    }

    // Сборка обрезанного HTML
    let result = '';
    totalLength = 0;
    const openTags = [];

    for (const node of nodes) {
      if (node.type === 'text') {
        const text = node.content;
        const remaining = boundary - totalLength;
        if (remaining <= 0) break;

        if (text.length <= remaining) {
          result += text;
          totalLength += text.length;
        } else {
          result += text.slice(0, remaining).trimEnd() + '…';
          totalLength = boundary;
        }
      } else if (node.type === 'open') {
        const tagName = node.tag.nodeName.toLowerCase();
        const attrs = [...node.tag.attributes]
          .map(a => ` ${a.name}="${a.value}"`)
          .join('');
        result += `<${tagName}${attrs}>`;
        openTags.push(tagName);
      } else if (node.type === 'close') {
        const tagName = node.tag.nodeName.toLowerCase();
        const lastOpen = openTags.lastIndexOf(tagName);
        if (lastOpen !== -1) {
          openTags.splice(lastOpen, 1);
          result += `</${tagName}>`;
        }
      }
    }

    // Закрываем открытые теги
    for (let i = openTags.length - 1; i >= 0; i--) {
      result += `</${openTags[i]}>`;
    }

    // Убираем <br> и пустые теги в конце
    result = cleanTrailingBreaks(result);

    return result;
  }

  // Вспомогательная функция для очистки хвоста
  function cleanTrailingBreaks(html) {
    return html
      // убираем хвостовые <br> и пробелы
      .replace(/(?:<br\s*\/?>\s*)+$/gi, '')
      // убираем пустые теги в конце (<b></b>, <i></i>, <span></span> и т.д.)
      .replace(/(<(b|i|em|strong|u|span|div|p)[^>]*>\s*<\/\2>\s*)+$/gi, '')
      .trim();
  }



  async function loadNews() {
    const container = document.getElementById('news-list');
    try {
      const res = await fetch('/api/news');
      const posts = await res.json();

      if (!posts.length) {
        container.innerHTML = '<p>Новостей пока нет.</p>';
        return;
      }

      container.innerHTML = posts
        .filter(post => post.type === 'post')
        .slice()
        .reverse()
        .map(post => `
          <article class="wide-content-block wide-content-block--news">
            <div class="wide-content-block__content">
              ${post.images?.[0] ? `<img class="wide-content-block__background-image" src="${post.images[0]}" alt="Фон">` : ''}
              ${post.headline ? `<h3 class="wide-content-block__title">${post.headline}</h3>` : ''}
              <p>${post.text.length > 350 ? truncateHTML(post.text, 250) : post.text}</p>
              ${post.text.length > 350 ? `<p><a class="btn" href="https://t.me/${post.id}" target="_blank">Читать далее</a></p>` : ''}
              <div class="wide-content-block__information">
                <a href="https://t.me/${post.id}" target="_blank">t.me/${post.id}</a> | ${post.formattedDate}
              </div>
            </div>
            ${post.images?.[0] ? `<div class="wide-content-block__media"><img class="wide-content-block__image" src="${post.images[0]}" alt="${post.headline || "Изображение поста"}"></div>` : ''}
          </article>
        `)
        .join('');

    } catch (err) {
      container.innerHTML = '<p>Ошибка при загрузке новостей.</p>';
      console.error(err);
    }
  }

  loadNews();
</script>
